.page-header
  h1 {{ editing ? 'Edit' : 'New' }} content

form.form-horizontal(name="form" role="form" novalidate)

  .init(ng-init="extendForm(form)")

  .form-group(ng-if="model.code")
    .col-md-2.text-right
      label.control-label(for="code") Code
    .col-md-4
      p.form-control-static(ng-bind="model.code")

  .form-group(ng-class="{ 'has-error': form.hasError('name') }")
    .col-md-2.text-right
      label.control-label(for="name") Name *
    .col-md-4
      input.form-control(
        type="text"
        name="name"
        ng-model="model.name"
        ng-model-options="{ updateOn: 'default blur', debounce: { default: 1000, blur: 0 } }"
        required
      )
    .col-md-6
      .help-block(ng-show="form.hasError('name')" ng-messages="form.name.$error")
        i.fa.fa-warning &nbsp;
        span(ng-message="required") Name cannot be empty.

  .form-group(ng-class="{ 'has-error': form.hasError('content.url') }")
    .col-md-2.text-right
      label.control-label(for="content.url") Content URL *
    .col-md-4
      input.form-control(
        type="text"
        name="content.url"
        ng-model="model.content.url"
        ng-model-options="{ updateOn: 'default blur', debounce: { default: 1000, blur: 0 } }"
        required
      )
    .col-md-6
      .help-block(ng-show="form.hasError('content.url')" ng-messages="form.content.url.$error")
        i.fa.fa-warning &nbsp;
        span(ng-message="required") Content URL cannot be empty.
        span(ng-message="invalid") Content URL is not a valid URL.

  ul.col-md-offset-2.text-danger(ng-show="responseErrors")
    li(ng-repeat="error in responseErrors track by $index") {{ error }}

  .row
    .col-md-4.col-md-offset-2
      button.btn.btn-primary(type="submit" ng-click="save()" ng-disabled="!submittable()") Save
      button.btn.btn-default.btn-margin-left(type="button" ng-click="cancel()") Cancel
