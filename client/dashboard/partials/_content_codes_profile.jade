.page-header
  h1 {{ editing ? 'Edit' : 'New' }} content

form.form-horizontal.content-code-profile(name="form" role="form" novalidate)

  .init(ng-init="extendForm(form)")

  .form-group(ng-if="model.code")
    .col-md-2.text-right
      label.control-label(for="code") Code
    .col-md-4
      p.form-control-static(ng-bind="model.code")

  .form-group(ng-class="{ 'has-error': form.hasError('name') }")
    .row
      .col-md-2.text-right
        label.control-label(for="name") Name *
      .col-md-4
        input.form-control(
          type="text"
          name="name"
          ng-model="model.name"
          ng-model-options="{ updateOn: 'default blur', debounce: { default: 1000, blur: 0 } }"
          required
        )
    .row
      .col-md-4.col-md-offset-2
        .help-block(ng-show="form.hasError('name')" ng-messages="form.name.$error")
          i.fa.fa-warning &nbsp;
          span(ng-message="required") Name cannot be empty.
          span(ng-message="maxlength") Name is too long ({{ nameMaxLength }} characters max.).

  .form-group
    .row
      .col-md-2.text-right
        label.control-label(for="content") Content *
        br
        button.btn.btn-default.btn-xs(type="button" ng-click="openNewContentItemModal()") Add new item
      .col-md-10
        .table-responsive.content-items-table
          .container-fluid
            table.table.table-condensed.table-striped
              thead
                tr
                  th.image-url-column Preview image
                  th Data
                  th.actions-column Actions
              tbody
                tr(ng-repeat="contentItem in model.content track by $index")
                  td
                    content-item-image-preview(url="contentItem.imageUrl")
                  td
                    content-item-form(
                      form                   = "form"
                      input-prefix           = "'content.' + $index + '.'"
                      item                   = "contentItem"
                      title-max-length       = "contentTitleMaxLength"
                      description-max-length = "contentDescriptionMaxLength"
                    )
                  td
                    button.btn.btn-danger.btn-xs(type="button" ng-click="openDeleteModal(contentItem)")
                      span.glyphicon.glyphicon-trash
                      | &nbsp;
                      | Delete

  //- .form-group(ng-class="{ 'has-error': form.hasError('imageUrl') }")
  //-   .row
  //-     .col-md-2.text-right
  //-       label.control-label(for="imageUrl") Image URL
  //-     .col-md-4
  //-       input.form-control(
  //-         type="text"
  //-         name="imageUrl"
  //-         ng-model="model.imageUrl"
  //-         ng-change="onImageUrlChange()"
  //-         ng-model-options="{ updateOn: 'default blur', debounce: { default: 1000, blur: 0 } }"
  //-       )
  //-     .col-md-6
  //-       div
  //-         label.control-label Preview
  //-       div.image-preview
  //-         us-spinner(ng-show="loadingPreview")
  //-         img.preview-image-url(
  //-           ng-show="!loadingPreview"
  //-           ng-src="{{ model.imageUrl }}"
  //-           image-loading="loadingPreview = false"
  //-         )

  ul.col-md-offset-2.text-danger(ng-show="responseErrors")
    li(ng-repeat="error in responseErrors track by $index") {{ error }}

  .row
    .col-md-4.col-md-offset-2
      button.btn.btn-primary(type="submit" ng-click="save()" ng-disabled="!submittable()") Save
      button.btn.btn-default.btn-margin-left(type="button" ng-click="cancel()") Cancel
